// Mocks generated by Mockito 5.0.15 from annotations
// in flutter_cars_app/test/data/repositories/car_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:flutter_cars_app/core/network/network_info.dart' as _i2;
import 'package:flutter_cars_app/data/datasource/car_local_data_source.dart'
    as _i4;
import 'package:flutter_cars_app/data/datasource/car_remote_data_source.dart'
    as _i6;
import 'package:flutter_cars_app/data/models/car/car_model.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i2.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [CarLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCarLocalDataSource extends _i1.Mock
    implements _i4.CarLocalDataSource {
  MockCarLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i5.CarModel>> getCarList() =>
      (super.noSuchMethod(Invocation.method(#getCarList, []),
              returnValue: Future<List<_i5.CarModel>>.value(<_i5.CarModel>[]))
          as _i3.Future<List<_i5.CarModel>>);
  @override
  _i3.Future<void> cacheCarList(List<_i5.CarModel>? cars) =>
      (super.noSuchMethod(Invocation.method(#cacheCarList, [cars]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [CarRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCarRemoteDataSource extends _i1.Mock
    implements _i6.CarRemoteDataSource {
  MockCarRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i5.CarModel>> getCarList() =>
      (super.noSuchMethod(Invocation.method(#getCarList, []),
              returnValue: Future<List<_i5.CarModel>>.value(<_i5.CarModel>[]))
          as _i3.Future<List<_i5.CarModel>>);
  @override
  String toString() => super.toString();
}
